apply plugin: 'com.android.application'
apply plugin: 'crashlytics'
apply plugin: 'checkstyle'
apply plugin: 'pmd'

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
        applicationId "eu.imind.android.imageupload"
        buildConfigField "boolean", "USE_CRASHLYTICS", "true"

        testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
    }

    productFlavors {
        staging {
            buildConfigField "boolean", "USE_CRASHLYTICS", "false"
            ext.enableCrashlytics = false
        }

        daily {
            applicationId = android.defaultConfig.applicationId + ".daily"
            versionName = android.defaultConfig.versionName + "-DAILY"
            buildConfigField "boolean", "USE_CRASHLYTICS", "false"
            ext.enableCrashlytics = false
        }
    }

    buildTypes {
        release {
            debuggable false
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
            buildConfigField "boolean", "USE_CRASHLYTICS", "false"
            ext.enableCrashlytics = false
        }
    }

    lintOptions {
        abortOnError false
        quiet true
        xmlReport true
        xmlOutput file("${project.buildDir}/reports/lint/lint.xml")
        htmlReport true
        htmlOutput file("${project.buildDir}/reports/lint/lint.html")
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

dependencies {
    compile 'com.android.support:support-v4:19.+'
    compile 'com.android.support:appcompat-v7:19.+'
    compile 'com.crashlytics.android:crashlytics:1.+'
    compile 'com.jakewharton:butterknife:5.1.+'
    compile 'com.squareup.okhttp:okhttp:1.6.+'
    compile 'com.squareup.okhttp:okhttp-urlconnection:1.6.+'
    compile 'com.squareup.picasso:picasso:2.3.+'
    compile 'com.squareup:otto:1.3.+'
    compile fileTree(dir: 'libs', include: ['*.jar'])

    androidTestCompile files('testLibs/espresso-1.1.jar',
            'testLibs/testrunner-1.1.jar',
            'testLibs/testrunner-runtime-1.1.jar')

    androidTestCompile 'com.google.guava:guava:14.0.1',
            'com.squareup.dagger:dagger:1.1.0',
            'org.hamcrest:hamcrest-core:1.1',
            'org.hamcrest:hamcrest-integration:1.1',
            'org.hamcrest:hamcrest-library:1.1'

    androidTestCompile 'com.google.dexmaker:dexmaker:1.+'
    androidTestCompile('com.google.dexmaker:dexmaker-mockito:1.+') {
        exclude module: 'mockito-core'
    }
    androidTestCompile 'org.objenesis:objenesis:2.+'
    androidTestCompile('org.mockito:mockito-core:1.9.+') {
        exclude module: 'objenesis'
    }
}

// *** Checkstyle config *** //
check.dependsOn 'checkstyle'
task checkstyle(type: Checkstyle) {
    configFile file("${project.rootDir}/code_analysis/config/checkstyle.xml")
    reports.xml.destination = file("${project.buildDir}/reports/checkstyle/checkstyle.xml")
    ignoreFailures = true
    showViolations = false
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files()
}

// *** PMD config *** //
//check.dependsOn 'pmd'
task pmd (type: Pmd, dependsOn: assembleDebug) {
    group 'verification'
    ruleSetFiles = files("${project.rootDir}/code_analysis/config/pmd.xml")
    reports.xml.destination = file("${project.buildDir}/reports/pmd/pmd.xml")
    reports.html.destination = file("${project.buildDir}/reports/pmd/pmd.html")
    source = fileTree('src/main/java')
    ignoreFailures = true
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
